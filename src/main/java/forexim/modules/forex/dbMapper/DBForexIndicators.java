package forexim.modules.forex.dbMapper;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import forexim.assets.DBMain;
import forexim.util.FEAwsCredentials;
import lombok.*;

import java.util.ArrayList;
import java.util.List;

@DynamoDBTable(tableName = "forex-indicators")
@Getter @Setter @NoArgsConstructor @AllArgsConstructor @ToString
public class DBForexIndicators extends DBMain {

    @DynamoDBHashKey @DynamoDBAutoGeneratedKey public String indicatorId;
    public Info info;
    public Classic classic;
    public Fibonacci fibonacci;
    public Camarilla camarilla;
    public Woodie woodie;
    public Demark demark;
    public Overall overall;
    public String currency;

    @DynamoDBDocument @Getter @Setter
    public static class Classic{
        public String pp;
        public String R1;
        public String R2;
        public String R3;
        public String S1;
        public String S2;
        public String S3;
    }

    @DynamoDBDocument @Getter @Setter
    public static class Fibonacci{
        public String pp;
        public String R1;
        public String R2;
        public String R3;
        public String S1;
        public String S2;
        public String S3;
    }

    @DynamoDBDocument @Getter @Setter
    public static class Camarilla{
        public String pp;
        public String R1;
        public String R2;
        public String R3;
        public String R4;
        public String S1;
        public String S2;
        public String S3;
        public String S4;
    }

    @DynamoDBDocument @Getter @Setter
    public static class Woodie{
        public String pp;
        public String R1;
        public String R2;
        public String S1;
        public String S2;
    }

    @DynamoDBDocument @Getter @Setter
    public static class Demark{
        public String high;
        public String low;
        public String R1;
        public String S1;
    }

    @DynamoDBDocument
    public class PivotPoint{
        public Classic classic;
        public Fibonacci fibonacci;
        public Camarilla camarilla;
        public Woodie woodie;
        public Demark demark;
    }

    @DynamoDBDocument @Getter @Setter
    public static class Overall{
        public String summary;
        public String change_at;
        public String msg;
    }

    @DynamoDBDocument
    public class Response{
        public PivotPoint pivot_point;
        public Overall overall;
    }

    @DynamoDBDocument @Getter @Setter
    public static class Info{
        public String id;
        public String decimal;
        public String symbol;
        public String period;
        public String disclaimer;
        public String update;
        public String update_time;
        public String server_time;
        public int credit_count;
    }

    @DynamoDBDocument
    public class Root{
        public boolean status;
        public int code;
        public String msg;
        public Response response;
        public Info info;
    }

    public static List<DBForexIndicators> fetchAll() {
        return new ArrayList<>(FEAwsCredentials.dynamoDBMapper().scan(DBForexIndicators.class, new DynamoDBScanExpression()));
    }
}
